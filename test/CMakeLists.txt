aux_source_directory(. SRC)

include_directories(${PROJECT_SOURCE_DIR}/src)
include_directories(${INCLUDE_CATCH2})
include_directories(${INCLUDE_BOOST})
include_directories(${INCLUDE_AWS})
include_directories(${INCLUDE_CURL})
if (WIN32)
	include_directories(${INCLUDE_COMPRESS}/Win)
	include_directories(${INCLUDE_LIBEVENT}/Win)
	include_directories(${INCLUDE_MYSQL}/Win)
else()
	include_directories(${INCLUDE_COMPRESS}/Linux)
	include_directories(${INCLUDE_LIBEVENT}/Linux)
	include_directories(${INCLUDE_MYSQL}/Linux)
endif()

link_directories(${PROJECT_SOURCE_DIR}/lib)
if (WIN32)
	link_directories(${LIB_BOOST}/Win)
	link_directories(${LIB_COMPRESS}/Win)
	link_directories(${LIB_CURL}/Win)
	link_directories(${LIB_LIBEVENT}/Win)
	link_directories(${LIB_AWS}/Win)
	link_directories(${LIB_MYSQL}/Win)
else()
	link_directories(${LIB_BOOST}/Linux)
	link_directories(${LIB_COMPRESS}/Linux)
	link_directories(${LIB_CURL}/Linux)
	link_directories(${LIB_LIBEVENT}/Linux)
	link_directories(${LIB_AWS}/Linux)
	link_directories(${LIB_MYSQL}/Linux)
endif()

add_executable(TestPlug ${SRC})

if (WIN32)
	target_link_libraries(TestPlug libcplug version libmysql event)
	target_link_libraries(TestPlug debug zlibstaticd debug libcurl-d_imp debug libboost_timer-vc142-mt-gd-x64-1_74 debug libboost_chrono-vc142-mt-gd-x64-1_74 debug libboost_date_time-vc142-mt-gd-x64-1_74 debug libboost_filesystem-vc142-mt-gd-x64-1_74 debug libboost_regex-vc142-mt-gd-x64-1_74 debug libboost_system-vc142-mt-gd-x64-1_74 debug libboost_thread-vc142-mt-gd-x64-1_74)
	target_link_libraries(TestPlug optimized zlibstatic optimized libcurl_imp optimized libboost_timer-vc142-mt-x64-1_74 optimized libboost_chrono-vc142-mt-x64-1_74 optimized libboost_date_time-vc142-mt-x64-1_74 optimized libboost_filesystem-vc142-mt-x64-1_74 optimized libboost_regex-vc142-mt-x64-1_74 optimized libboost_system-vc142-mt-x64-1_74 optimized libboost_thread-vc142-mt-x64-1_74)
else()
	target_link_libraries(TestPlug mysqlclient event event_pthreads z minizip cplug pthread boost_timer boost_chrono boost_date_time boost_filesystem boost_regex boost_system boost_thread curl)
endif()
		
target_link_libraries(TestPlug aws-cpp-sdk-s3 aws-cpp-sdk-core)

target_compile_features(TestPlug PUBLIC cxx_std_11)
